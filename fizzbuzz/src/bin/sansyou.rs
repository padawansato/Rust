fn main() {
    // イミュータブルな束縛を作っておく。
    let x = 1;
    // `&値` で参照がとれる。
    let y: &isize = &x;
    // ミュータブルな束縛を作っておく。
    let mut a = 1;
    // `&mut 値`でミュータブルな参照がとれる。値もミュータブルである必要がある。
    let b = &mut a;
    // `*参照 = 値`で代入できる。これは`&mut`型ならいつでも可能。
    *b = 2;
    // bの参照先が書き変わっている。aは一定の条件を満たしている（Copyな）ため参照外しができる。
    println!("result is {}", *b); // => 2
    println!("result is {}", *y); // => 1 
    
}