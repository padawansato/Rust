/** 
* rustは複数のデータ型を集めて構造体を定義できる。
* 構造体の継承はない。トレイトがその代わりにある。
* 1.データを持たないUnit構造体
* 2.フィールドに名前がないタプル構造体
* 3.普通の構造体
* の3つがある。
*/

//unit構造体
// struct 名前; 
struct Dummy;

// タプル構造体
// struct 名前(型, ..);
struct Point(f64, f64);

// 通常の構造体
// struct 名前 {フィールド: 型, ..}
struct Color {
    r: u8,
    g: u8,
    b: u8
}


fn main(){
    // unit構造体は名前でそのまま初期化できる。
    let dummy = Dummy;

    // タプル構造体は関数のように初期化
    // 関数として扱うこともできる
    let point = Point(0.0, 1.0);
    
    // タプル構造体のフィールドへのアクセス
    let x = point.0;
    println!("タプル構造体.フィールドインデックス => {:?}", x);

    // 普通の構造体の初期化
    let black = Color {r: 10, g: 20, b: 30};

    // 普通の構造体のフィールドへのアクセス
    let r = black.r;
    println!("構造体.フィールド名 => {}", r);
}